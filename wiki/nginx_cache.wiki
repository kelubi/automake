用nginx做cache的一些要点

= 主配置文件 =

 * 设置缓存
 * 设置日志格式


/usr/local/nginx/conf/nginx.conf
{{{
user  www www;
worker_processes 2;
error_log  /var/log/nginx/error.log  warn;
#pid        logs/nginx.pid;
#Specifies the value for maximum file descriptors that can be opened by this process.
worker_rlimit_nofile 51200;

events
{
      use epoll;
      worker_connections 21200;
}

http
{
        include       mime.types;
        default_type  application/octet-stream;

        server_names_hash_bucket_size 128;
        
        keepalive_timeout 30;
        client_header_buffer_size    64k;
        client_max_body_size         32m;
        large_client_header_buffers  4 64k;
        client_header_timeout  30;
        client_body_timeout    30;
        send_timeout           30;
        connection_pool_size        256;
        request_pool_size        4k;
        output_buffers   4 32k;
        postpone_output  1460;
        fastcgi_connect_timeout 30;
        fastcgi_send_timeout 30;
        fastcgi_read_timeout 30;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 128k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 128k;
        fastcgi_temp_path /dev/shm;
        tcp_nodelay on;
        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 8k;
        gzip_http_version 1.1;
        gzip_types       text/plain application/x-javascript text/css application/xml;
        server_name_in_redirect off;
        fastcgi_intercept_errors on;

        proxy_temp_path   /data/proxy_temp_dir;
        proxy_cache_path  /data/proxy_cache_dir  levels=1:2   keys_zone=cache_one:800m inactive=1d max_size=10g;

        log_format  main          '$remote_addr - [$time_local] "$request" ' 
                          '$status $body_bytes_sent "$http_referer"'  
                          '"$http_user_agent" $http_x_forwarded_for ';       
        log_format cache '$remote_addr - $remote_user [$time_local] - $request ' 'upstream_response_time $upstream_response_time ' 'msec $msec request_time $request_time - $upstream_cache_status';
 
        include vhosts/*.conf;
}
}}}


= 代理站点配置文件 =

/usr/local/nginx/conf/vhosts/bag.com.conf 

{{{
        server
        {
            listen 80;
            server_name bag.com www.bag.com;
            location / {
                proxy_read_timeout 120;
                proxy_set_header        X-Forwarded-For  $remote_addr;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_connect_timeout 120;
                proxy_pass http://www.bag.com2;
                client_max_body_size    32m;
                client_body_buffer_size 256k;
            }
            location ~ .*\.(ico|jpg|gif|jpeg|css|js|flv|png|swf)
            {
                proxy_cache cache_one;
                proxy_cache_valid  200 304 12h;
                proxy_cache_key $host$uri$is_args$args;
                proxy_read_timeout 120;
                proxy_set_header Host  $host;
                proxy_set_header X-Forwarded-For  $remote_addr;
                expires      1d;
                proxy_connect_timeout 120;
                proxy_pass http://www.bag.com2;
                proxy_set_header        Host $host;
                proxy_set_header        X-Real-IP $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                client_max_body_size    32m;
                client_body_buffer_size 256k;
                add_header      nginx-cache     "$upstream_cache_status  from  cache.bagxo.com";
            }
            #access_log  off;#/var/log/b2b.pe.log;
            access_log  /var/log/nginx/bag.com.log cache;

        }
        upstream www.bag.com2 {
           server 174.133.40.110:80;
        }

}}}

= 缓存命中率 =

{{{

#!/bin/bash
# author:weizhifeng
# proxy_cache hit rate
if [ $1x != x ]
then
    if [ -e $1 ]
    then
        HIT=`cat $1 | grep HIT | wc -l`
        ALL=`cat $1 | wc -l`
        Hit_rate=`echo "scale=2;($HIT/$ALL)*100" | bc`
        echo "Hit rate=$Hit_rate%"
    else
        echo "$1 not exsist!"
    fi
else
    echo "usage: ./hit_rate.sh file_path"
fi
}}}

用法是
{{{
7># sh hit_reate.sh  /var/log/nginx/bag.com.log 
Hit rate=53.00%
}}}